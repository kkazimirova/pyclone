#!/usr/bin/env python

#=======================================================================================================================
import argparse
from pyclone.run import build_input_file,  run_dp_model, build_random_samples_input_files,\
                        random_samples_analyse, my_plot_cellular_frequencies, \
                        my_random_samples_plot_cf, agregate_and_plot

parser = argparse.ArgumentParser(prog='PyClone')

parser.add_argument('--version', action='version', version='PyClone-0.10.0')

subparsers = parser.add_subparsers()

#---------------------------------------------------------------------------------------------------------------------- 
analyse_parser = subparsers.add_parser('analyse', help='''Start a new Dirichlet process model analysis.''')

analyse_parser.add_argument('in_file',
                            help='Path to model input file.')

analyse_parser.add_argument('out_dir',
                            help='Path where output file with estimated cellular prevalences.')

analyse_parser.add_argument('--num_iters', default=10000, type=int,
                            help='''How many iterations will run. Default 10,000.''')

analyse_parser.set_defaults(func=run_dp_model)

#---------------------------------------------------------------------------------------------------------------------- 
build_prior_parser = subparsers.add_parser('build_input_file', help='''Build an input file for Dirichlet process model analysis.''')

build_prior_parser.add_argument('in_file',
                                help='''Path to tab separated input file. It must contain columns: mutation_id, 
                                ref_counts, var_counts, cn_n, cn_v.''')

build_prior_parser.add_argument('out_file',
                                help='Path where formatted input file will be written.')

build_prior_parser.set_defaults(func=build_input_file)

#----------------------------------------------------------------------------------------------------------------------
random_samples_input_parser = subparsers.add_parser('build_rs_input_files', help='''Build input files of random samples for Dirichlet process model analysis.''')

random_samples_input_parser.add_argument('in_file',
                                         help='''Path to tab separated input file. It must contain columns: mutation_id, 
                                             ref_counts, var_counts, cn_n, cn_v.''')

random_samples_input_parser.add_argument('out_dir',
                                         help='''Path to output dir where input files will be stored.''')

random_samples_input_parser.add_argument('rs_size', type=int,
                                         help='''Size of input file. How many mutations will be in an input file.''')

random_samples_input_parser.set_defaults(func=build_random_samples_input_files)

#----------------------------------------------------------------------------------------------------------------------
random_samples_analyse_parser = subparsers.add_parser('rs_analyse', help='''Start a Dirichlet process analysis for each file.''')

random_samples_analyse_parser.add_argument('in_dir',
                                           help='Path to directorey where input files are stored')

random_samples_analyse_parser.add_argument('out_dir',
                                           help='Path where output files with estimated cellular prevalences for each input file.')

random_samples_analyse_parser.add_argument('--num_iters', default=10000, type=int,
                                           help='''How many iterations will run. Default 10,000.''')

random_samples_analyse_parser.set_defaults(func=random_samples_analyse)


#----------------------------------------------------------------------------------------------------------------------
random_samples_plot_parser = subparsers.add_parser('rs_plot_cf',
                                                   help='''Plot the posterior densities of the cellular frequencies of the mutations
                                       from an analysis for each random sample file.''')

random_samples_plot_parser.add_argument('in_dir',
                                        help='Path to directory where the model analysises for random samples were written.')

random_samples_plot_parser.add_argument('out_dir',
                                        help='Path to directory where plots will be saved.')

random_samples_plot_parser.add_argument('--split', choices=["0", "1"], default=1,
                                        help='''Information if split plots to more files. Needed for random samples with more than 300 mutations.''')

random_samples_plot_parser.add_argument('--size', default=300, type=int,
                                        help='''If split is 1 then size is number of samples to plot in one file. Minimum is 2. ''')

random_samples_plot_parser.set_defaults(func=my_random_samples_plot_cf)

#----------------------------------------------------------------------------------------------------------------------
plot_cf_parser = subparsers.add_parser('agregate_and_plot_cf',
                                       help='''Plot the posterior densities of the cellular frequencies from each random sample to one file.''')

plot_cf_parser.add_argument('trace_dir',
                            help='Path to directory where the Dirichlet process analysis for each random sample was written.')

plot_cf_parser.add_argument('out_dir',
                            help='Path to file where plot/plots will be saved.')

plot_cf_parser.add_argument('--size', default=300, type=int,
                            help='''Number of samples to plot in one file. Minimum is 2.''')

plot_cf_parser.set_defaults(func=agregate_and_plot)

#----------------------------------------------------------------------------------------------------------------------
plot_cf_parser = subparsers.add_parser('plot_cf',
                                       help='''Plot the posterior densities of the cellular frequencies from a Dirichlet process analysis.''')

plot_cf_parser.add_argument('trace_dir',
                            help='Path to directory where the Dirichlet process analysis for each random sample was written.')

plot_cf_parser.add_argument('out_dir',
                            help='Path to file where plot will be saved. If there are too many mutations, plot will be splitted.')

plot_cf_parser.add_argument('--size', default=300, type=int,
                            help='''Number of samples to plot in one file. Minimum is 2.''')



plot_cf_parser.set_defaults(func=my_plot_cellular_frequencies)
#----------------------------------------------------------------------------------------------------------------------


args = parser.parse_args()

args.func(args)
